<html>
<head>
<title>K-Means Clustering Algorithm</title>
<script type="text/javascript">
var text = "";

function EucDist(point1, point2)
{
	var i, j, sumSq = 0;

	if (point1.length != point2.length)
		return Number.MAX_VALUE;

	for (i = 0; i < point1.length; i++)
		sumSq += Math.pow(Math.abs(point1[i] - point2[i]), 2);

	return Math.sqrt(sumSq);
}

function generate()
{
	document.getElementById("points").value = "";
	var numPts = document.getElementById('nopts').value;
	var i;

	for (i = 0; i < numPts; i++)
	{
		inp[i] = new Array();
		inp[i][0] = Math.floor(Math.random()*400+1);
		inp[i][1] = Math.floor(Math.random()*400+1);
		document.getElementById("points").value += "(" + inp[i][0] + ", " + inp[i][1] + ")\n";
	}

	dispPts(inp);
}

function dispPts(inp)
{
	var i, c = document.getElementById("myCanvas");
	var ctx = c.getContext("2d");

	ctx.clearRect(0, 0, c.height, c.width);
	ctx.fillStyle="#000000";

	for (i = 0; i < inp.length; i++)
	{
		ctx.beginPath();
		ctx.arc(inp[i][0],c.height-inp[i][1],5,0,Math.PI*2,true);
		ctx.closePath();
		ctx.fill();
	}
}

function kmeans(items, k, maxno, clusters, labels)
{
	var minDist, i, j, changed, iter, pos, chosen = new Array();
	var maxDist = new Array();
	text = "";
	var c = document.getElementById("myCanvas");
	var ctx = c.getContext("2d");
	ctx.clearRect(0, 0, c.height, c.width);
	dispPts(items);


	for (i = 0; i < items.length; i++)
		chosen[i] = 0;

	for(i = 0; i < k; i++)
	{
		do
			pos = Math.floor(Math.random()*items.length + 1);
		while (chosen[pos] != 0);

		clusters[i] = new Array();

		clusters[i][0] = items[pos][0];
		clusters[i][1] = items[pos][1];
		chosen[pos] = 1;
		maxDist[i] = 0;
	}

	for (i = 0; i < items.length; i++)
	{
		pos = Number.MAX_VALUE;
		posD = Number.MAX_VALUE;
		for (j = 0; j < k; j++)
		{
			dist_curr = EucDist(items[i], clusters[j]);
			if (dist_curr < posD)
			{
				posD = dist_curr;
				pos = j;
			}
		}
		labels[i] = pos;
	}

	text += "Initial Configuration: <br>";
	text += dispClusters(items, k, clusters, labels);

	changed = false;
	iter = 0;

	do
	{
		for (i = 0; i < k; i++)
		{
			var sum = new Array();
			for (m = 0; m < items[0].length; m++)
				sum[m] = 0;
			count = 0;

			for (j = 0; j < items.length; j++)
			{
				if (labels[j] == i)
				{
					for (m = 0; m < items[j].length; m++)
					{
						sum[m] += items[j][m];
					}
					count++;
				}
			}


			for (m = 0; m < clusters[i].length; m++)
				clusters[i][m] = sum[m] / count;
			maxDist[i] = 0;
		}

		for (i = 0; i < items.length; i++)
		{
			pos = M;
			posD = M;

			for (j = 0; j < k; j++)
			{
				dist_curr = EucDist(items[i], clusters[j]);
				if (dist_curr < posD)
				{
					posD = dist_curr;
					pos = j;
				}
			}

			if (pos != labels[i])
			{
				labels[i] = pos;
				changed = true;
			}
		}
		iter++;
	} while (changed == true && iter <= maxno);

	for (i = 0; i < k; i++)
		for (j = 0; j < items.length; j++)
			if (labels[j] == i && EucDist(items[j], clusters[i]) > maxDist[i])
				maxDist[i] = EucDist(items[j], clusters[i]);

	for (i = 0; i < k; i++)
	{
		ctx.strokeStyle="#0000FF";
		ctx.beginPath();
		ctx.moveTo(clusters[i][0], c.height-clusters[i][1]);
		for (j = 0; j < items.length; j++)
			if (labels[j] == i)
			{
				ctx.lineTo(items[j][0], c.height-items[j][1]);
				ctx.lineTo(clusters[i][0], c.height-clusters[i][1]);
			}
		ctx.closePath();
		ctx.stroke();

		ctx.fillStyle="#FF0000";
		ctx.beginPath();
		ctx.arc(clusters[i][0],c.height-clusters[i][1],2,0,Math.PI*2,true);
		ctx.closePath();
		ctx.fill();

		ctx.strokeStyle="#00FF00";
		ctx.beginPath();
		ctx.arc(clusters[i][0],c.height-clusters[i][1],maxDist[i],0,Math.PI*2,true);
		ctx.closePath();
		ctx.stroke();

	}
}

function dispClusters(items, k, clusters, labels)
{
	var text = "<table>";
	var i, j;

	for (i = 0; i < clusters.length; i++)
	{
		text += "<tr><td><b>Cluster " + i + ":</b></td>";
		text += "<td><b>(" + Math.round(clusters[i][0]*100)/100 + ", " + Math.round(clusters[i][1]*100)/100 + ")</b></td>";
		for (j = 0; j < items.length; j++)
			if (labels[j] == i)
				text += "<td>(" + items[j][0] + ", " + items[j][1] + ")</td>";
		text += "</tr>";
	}


	text += "</table>";
	return text;
}
</script>
</head>
<body>
This is my implementation of the k-means clustering algorithm.
<form name=input id=input>
Number of Points: 
<select name=nopts id=nopts>
  <option value="25">25</option>
  <option value="50">50</option>
  <option value="100">100</option>
  <option value="200">200</option>
</select><br>
Number of Clusters:
<select name=noclust id=noclust>
  <option value="5">5</option>
  <option value="10">10</option>
  <option value="15">15</option>
  <option value="20">20</option>
</select><br>
Max Number of Iterations:
<select name=maxno id=maxno>
  <option value="50">50</option>
  <option value="100">100</option>
  <option value="200">200</option>
  <option value="500">500</option>
</select><br>
<textarea name="points" id="points" readonly rows=5></textarea><br>
Keep Current Points? <input type="checkbox" name="keep" id="keep">
<input type=Button value="Generate Points" onclick="generate()">
<input type=Button value="Run K-Means" onclick="kmeans(inp, document.getElementById('noclust').value, document.getElementById('maxno').value, clusters, labels);text += 'Final Configuration:<br>';text += dispClusters(inp, 10, clusters, labels);document.getElementById('output').innerHTML = text;">
</form>
<canvas id="myCanvas" width="400" height="400" style="border:1px solid #c3c3c3;">
Your browser does not support the canvas element.
</canvas>
<p name='output' id='output'></p>


<script type="text/javascript">
var inp = new Array();
var clusters = new Array();
var labels = new Array();

//for (i = 0; i < 50; i++)
//{
//	inp[i] = new Array();
//	inp[i][0] = Math.floor(Math.random()*100+1);
//	inp[i][1] = Math.floor(Math.random()*100+1);
//	document.getElementById("points").value += "(" + inp[i][0] + ", " + inp[i][1] + ")\n";;
//}

//document.getElementById('output').innerHTML += "clusters.length = " +
//clusters.length + "<br>";

//kmeans(inp, 10, 25, clusters, labels);

//document.getElementById('output').innerHTML += "They are " + clusters + "<br>" + labels + "<br>";

//text += "Final Configuration:<br>";
//text += dispClusters(inp, 10, clusters, labels);
//document.getElementById('output').innerHTML += text;
</script>

</body>
</html>
